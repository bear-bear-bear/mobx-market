{"version":3,"sources":["stores/Counter.js","stores/Market.js","stores/index.js","hooks/useStore.js","components/Counter.jsx","components/SuperMarketTemplate.jsx","components/ShopItem.jsx","components/ShopItemList.jsx","components/BasketItem.jsx","components/BasketItemList.jsx","components/Total.jsx","components/SuperMarket.jsx","App.jsx","index.jsx"],"names":["CounterStore","rootStore","number","this","makeAutoObservable","MarketStore","selectdItems","autorun","console","log","total","name","find","item","price","existingItem","findItem","count","counter","push","itemToTake","remove","reduce","acc","market","StoreContext","createContext","StoreProvider","children","Provider","value","useStore","context","useContext","undefined","Error","observer","onClick","increase","decrease","SuperMarketTemplate","items","basket","className","ShopItem","onPut","onPutItem","useCallback","put","map","onTake","onTakeItem","take","TotalPrice","style","float","SuperMarket","Total","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6476fee.chunk.js","sourcesContent":["import { makeAutoObservable } from 'mobx';\r\n\r\nclass CounterStore {\r\n    number = 1;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    increase () {\r\n        this.number++;\r\n    };\r\n\r\n    decrease () {\r\n        if (this.number === 1) return;\r\n        this.number--;\r\n    };\r\n}\r\n\r\nexport default CounterStore;\r\n","import { autorun, makeAutoObservable } from 'mobx';\r\n\r\nclass MarketStore {\r\n    selectdItems = [];\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        makeAutoObservable(this);\r\n        autorun(() => console.log('총합:', this.total));\r\n    };\r\n\r\n    findItem(name) {\r\n        return this.selectdItems.find((item) => item.name === name);\r\n    };\r\n\r\n    put(name, price) {\r\n        const existingItem = this.findItem(name);\r\n        const count = this.rootStore.counter.number;\r\n\r\n        if (!existingItem) {\r\n            this.selectdItems.push({\r\n                name,\r\n                price,\r\n                count,\r\n            });\r\n            return;\r\n        }\r\n\r\n        existingItem.count += count;\r\n    };\r\n\r\n    take(name) {\r\n        const itemToTake = this.findItem(name);\r\n        if (!itemToTake) {\r\n            return;\r\n        }\r\n\r\n        itemToTake.count--;\r\n        if (itemToTake.count === 0) {\r\n            this.selectdItems.remove(itemToTake);\r\n        }\r\n    };\r\n\r\n    get total() {\r\n        return this.selectdItems.reduce((acc, { price, count }) => {\r\n            return acc + (price * count);\r\n        }, 0);\r\n    };\r\n}\r\n\r\nexport default MarketStore;\r\n","import { createContext } from \"react\";\r\nimport CounterStore from \"./Counter\";\r\nimport MarketStore from \"./Market\";\r\n\r\nclass RootStore {\r\n    constructor () {\r\n        this.counter = new CounterStore(this);\r\n        this.market = new MarketStore(this);\r\n    }\r\n}\r\nexport const rootStore = new RootStore();\r\n\r\nexport const StoreContext = createContext(rootStore);\r\n\r\nexport const StoreProvider = ({ children }) => {\r\n    return <StoreContext.Provider value={rootStore}>{children}</StoreContext.Provider>;\r\n}\r\n","import { useContext } from \"react\";\r\nimport { StoreContext } from \"../stores\";\r\n\r\nexport default function useStore () {\r\n    const context = useContext(StoreContext);\r\n    if (context === undefined) {\r\n        throw new Error(\"useRootStore must be used within RootStoreProvider\");\r\n    }\r\n\r\n    return context;\r\n};\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport useStore from \"../hooks/useStore\";\r\n\r\nconst Counter = () => {\r\n    const { counter } = useStore();\r\n\r\n    const increase = () => {\r\n        counter.increase();\r\n    };\r\n\r\n    const decrease = () => {\r\n        counter.decrease();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>{counter.number}</h1>\r\n            <button onClick={increase}>+1</button>\r\n            <button onClick={decrease}>-1</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default observer(Counter);\r\n","import React from 'react';\r\nimport './SuperMarketTemplate.css';\r\n\r\nconst SuperMarketTemplate = ({ items, basket, total }) => {\r\n    return (\r\n        <div className=\"super-market-template\">\r\n            <div className=\"items-wrapper\">\r\n                <h2>상품</h2>\r\n                {items}\r\n            </div>\r\n            <div className=\"basket-wrapper\">\r\n                <h2>장바구니</h2>\r\n                {basket}\r\n                {total}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuperMarketTemplate;\r\n","import React from 'react';\r\nimport './ShopItem.css';\r\n\r\nconst ShopItem = ({ name, price, onPut }) => {\r\n    return (\r\n        <div className=\"shop-item\" onClick={() => onPut(name, price)}>\r\n            <h4>{name}</h4>\r\n            <div>{price}원</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShopItem;\r\n","import React, {useCallback} from 'react';\r\nimport ShopItem from './ShopItem';\r\nimport useStore from '../hooks/useStore';\r\nimport {observer} from \"mobx-react\";\r\n\r\nconst items = [\r\n    {\r\n        name: '생수',\r\n        price: 850,\r\n    },\r\n    {\r\n        name: '신라면',\r\n        price: 900,\r\n    },\r\n    {\r\n        name: '포카칩',\r\n        price: 1500,\r\n    },\r\n    {\r\n        name: '새우깡',\r\n        price: 1000,\r\n    },\r\n];\r\n\r\nconst ShopItemList = () => {\r\n    const { market } = useStore();\r\n    const onPutItem = useCallback((name, price) => {\r\n        market.put(name, price);\r\n    }, [market]);\r\n\r\n    return (\r\n        <div>\r\n            {items.map((item) => (\r\n                <ShopItem item={item} key={item.name} onPut={onPutItem} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default observer(ShopItemList);\r\n","import React from 'react';\r\nimport './BasketItem.css';\r\nimport { observer } from 'mobx-react';\r\n\r\nconst BasketItem = ({ item, onTake }) => {\r\n    return (\r\n        <div className=\"basket-item\">\r\n            <div className=\"name\">{item.name}</div>\r\n            <div className=\"price\">{item.price}원</div>\r\n            <div className=\"count\">{item.count}</div>\r\n            <div className=\"return\" onClick={() => onTake(item.name)}>\r\n                갖다놓기\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default observer(BasketItem);\r\n","import React, {useCallback} from 'react';\r\nimport BasketItem from './BasketItem';\r\nimport useStore from \"../hooks/useStore\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst BasketItemList = () => {\r\n    const { market } = useStore();\r\n\r\n    const onTakeItem = useCallback((name) => {\r\n        market.take(name);\r\n    }, [market]);\r\n\r\n    return (\r\n        <div>\r\n            {market.selectdItems.map((item) => (\r\n                <BasketItem\r\n                    item={item}\r\n                    key={item.name}\r\n                    onTake={onTakeItem}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default observer(BasketItemList);\r\n","import React from 'react';\r\nimport useStore from '../hooks/useStore';\r\n\r\nconst TotalPrice = () => {\r\n    const { market } = useStore();\r\n\r\n    return (\r\n        <div>\r\n            <hr />\r\n            <p style={{ float: 'right' }}>\r\n                <b>총합:</b> {market.total}원\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TotalPrice;\r\n","import React from 'react';\r\nimport SuperMarketTemplate from './SuperMarketTemplate';\r\nimport ShopItemList from './ShopItemList';\r\nimport BasketItemList from './BasketItemList';\r\nimport TotalPrice from \"./Total\";\r\n\r\nconst SuperMarket = () => {\r\n    return (\r\n        <SuperMarketTemplate\r\n            items={<ShopItemList />}\r\n            basket={<BasketItemList />}\r\n            total={<TotalPrice />}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SuperMarket;\r\n","import React, { Component } from 'react';\r\nimport Counter from './components/Counter';\r\nimport SuperMarket from './components/SuperMarket';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Counter />\r\n                <hr />\r\n                <SuperMarket />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// src/index.jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {StoreProvider} from \"./stores\";\n\nReactDOM.render(\n    <StoreProvider>\n        <App />\n    </StoreProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}